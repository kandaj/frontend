name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code (Current Repository)    
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    # Step 3: Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=$(git rev-parse --short HEAD)
        docker build -t jagkandasamy/frontend-app:$IMAGE_TAG .
        docker push jagkandasamy/frontend-app:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # Step 4: Clone the Helm Chart Repository
    - name: Clone Helm Repository
      run: |
        git clone https://x-access-token:${{ secrets.HELM_GITHUB_TOKEN }}@github.com/<owner>/<helm-repository>.git helm-repo
        cd helm-repo
        git checkout main

    # Step 5: Update the `values.yaml` File in Helm Repository
    - name: Update Helm Values
      run: |
        cd helm-repo
        sed -i "s|tag: .*|tag: $IMAGE_TAG|" values.yaml
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add values.yaml
        git commit -m "Update image tag to $IMAGE_TAG"
        git push origin main
      env:
        IMAGE_TAG: ${{ env.IMAGE_TAG }}

    # Step 6: Trigger Argo CD Sync
    - name: Trigger Argo CD Sync
      run: |
        curl -k -X POST -H "Content-Type: application/json" \
          -H "Authorization: Bearer $ARGOCD_AUTH_TOKEN" \
          -d '{"prune": true}' \
          $ARGOCD_SERVER/api/v1/applications/frontend-app/sync
      env:
        ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}